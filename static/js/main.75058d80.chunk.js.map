{"version":3,"sources":["AdresseList.js","DawaSearcher.js","ErrorComp.js","SuccessAlert.js","context/FormContext.js","components/TextInput.js","components/ImageUpload.js","components/DateInput.js","components/SelectInput.js","components/SubmitButton.js","Formular.js","service.js","App.js","reportWebVitals.js","index.js"],"names":["AdresseList","searchTerm","handleChoice","setTekst","komkode","useState","adresses","setAdresses","setDoSearch","useEffect","length","url","console","log","fetch","then","res","json","data","comps","map","item","index","ListItem","key","tekst","value","button","onClick","e","handleClick","ListItemText","primary","List","component","style","maxHeight","overflow","DawaSearcher","size","setAdressData","adresseTekst","setAdresseTekst","showAutocompleteList","setShowAutocompleteList","adgangsadresse","x","y","setItem","Grid","xs","TextField","id","InputLabelProps","shrink","label","Typography","variant","fullWidth","onChange","target","InputProps","endAdornment","InputAdornment","position","IconButton","Clear","useStyles","makeStyles","theme","root","width","marginTop","spacing","AlertComp","props","classes","errors","closeAlert","list","err","className","Alert","severity","onClose","SuccessAlert","ansoeger_mail","ansoeger_navn","ansoeger_tlf","ansoegn_indsendt","ansvarl_kontaktmail","ansvarl_kontaktpers","ansvarl_kontaktlf","overnat_adresse","overnat_postnr","overnat_by","overnat_antal","overnat_kommune","overnat_lokaler","overnat_navn","overnat_over_150","overnat_slut_dato","Date","overnat_slut_tid","overnat_start_dato","overnat_start_tid","overnat_tegning","overnat_tegning_filnavn","the_geom","x_coord","y_coord","overnat_kontaktpers","overnat_kontakttlf","FormularContext","React","createContext","FormularProvider","state","setState","setValue","prevState","Provider","keyValues","Object","keys","forEach","k","children","TextInput","title","type","evtHandler","useContext","handleChange","ImageUpload","str","setImageSrc","fileRef","useRef","setValues","reader","FileReader","handleReaderLoaded","result","replace","color","htmlFor","display","name","accept","files","file","onload","readAsDataURL","ref","aria-label","current","click","Chip","substring","onDelete","DateInput","format","margin","date","startDate","slutDato","endDate","KeyboardButtonProps","cancelLabel","TimeInput","ampm","time","DateTimeInputs","kommuner","nummer","SelectInput","setKomkode","select","split","nr","option","MenuItem","SubmitButton","Button","flexGrow","paper","padding","textAlign","palette","text","secondary","formatedTimestamp","d","toISOString","toTimeString","Formular","resetForm","gid","schema","yup","shape","required","typeError","positive","integer","matches","email","formErrors","setFormErrors","successMessage","setSuccessMessage","utils","DateFnsUtils","locale","daLocale","Container","maxWidth","gutterBottom","container","adress","streetname","adressname","postnr","postnrnavn","Checkbox","checked","formData","validate","abortEarly","valid","columns","join","values","buildQuery","toString","axios","post","postFormData","window","scrollTo","top","behavior","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75058d80.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nexport default function AdresseList({\r\n  searchTerm,\r\n  setTekst,\r\n  handleChoice,\r\n  komkode,\r\n}) {\r\n  const [adresses, setAdresses] = useState([]);\r\n  const [doSearch, setDoSearch] = useState(true);\r\n  const handleClick = (item) => {\r\n    // console.log(tekst);\r\n    //setTekst(tekst);\r\n    handleChoice(item);\r\n    setDoSearch(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchTerm.length < 3) return;\r\n    const url = `https://dawa.aws.dk/adgangsadresser/autocomplete?q=${searchTerm}&type=adgangsadresse&side=1&per_side=105&noformat=1&kommunekode=${komkode}&srid=25832`;\r\n    console.log(url);\r\n    fetch(url).then((res) => {\r\n      res.json().then((data) => {\r\n        setAdresses(data);\r\n      });\r\n    });\r\n  }, [searchTerm]);\r\n\r\n  let comps = adresses.map((item, index) => (\r\n    <ListItem\r\n      key={`${index}-${item.tekst}`}\r\n      value={item.tekst}\r\n      button\r\n      onClick={(e) => handleClick(item)}\r\n    >\r\n      <ListItemText primary={item.tekst} />\r\n    </ListItem>\r\n  ));\r\n\r\n  return (\r\n    <List component='nav' style={{ maxHeight: 400, overflow: \"auto\" }}>\r\n      {comps}\r\n    </List>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AdresseList from \"./AdresseList\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { Clear, Delete } from \"@material-ui/icons\";\r\n\r\nexport default function DawaSearcher({\r\n  size,\r\n  setAdressData,\r\n  komkode,\r\n  adresseTekst,\r\n  setAdresseTekst,\r\n}) {\r\n  const [data, setData] = useState([]);\r\n  const [showAutocompleteList, setShowAutocompleteList] = useState(true);\r\n  const [tekst, setTekst] = useState(\"\");\r\n  const [_item, setItem] = useState({\r\n    tekst: \"\",\r\n    adgangsadresse: { x: \"\", y: \"\" },\r\n  });\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  /*\r\n     Called when inputing in the search box / adresse field\r\n\r\n     - setShowList : \r\n    */\r\n  const handleChange = (e) => {\r\n    setShowAutocompleteList(true);\r\n    setAdresseTekst(e.target.value);\r\n  };\r\n\r\n  const handleChoice = (item) => {\r\n    setShowAutocompleteList(false);\r\n    setItem(item);\r\n    setAdresseTekst(item.tekst);\r\n    setAdressData(item); // pass text and location to the parent component\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={size}>\r\n      <TextField\r\n        id='standard-basic'\r\n        InputLabelProps={{ shrink: true }}\r\n        label={\r\n          <Typography variant='h6' component='h3'>\r\n            Overnatningstedets adresse\r\n          </Typography>\r\n        }\r\n        fullWidth\r\n        value={adresseTekst}\r\n        onChange={handleChange}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position='end'>\r\n              <IconButton\r\n                onClick={(e) => {\r\n                  setAdresseTekst(\"\");\r\n                  setAdressData(\"\");\r\n                  setShowAutocompleteList(false);\r\n                }}\r\n              >\r\n                <Clear />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      {showAutocompleteList && (\r\n        <AdresseList\r\n          searchTerm={adresseTekst}\r\n          setTekst={setAdresseTekst}\r\n          handleChoice={handleChoice}\r\n          komkode={komkode}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';  \r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default function AlertComp(props){\r\n    const classes = useStyles();\r\n    const {errors, closeAlert} = props;\r\n    const list = <ul>\r\n        {\r\n            errors.map((err, index) => <li key={index}>{err}</li>)\r\n        }\r\n    </ul>;\r\n    return (\r\n        <div className={classes.root}>\r\n            <Alert severity=\"error\" onClose={() => closeAlert([])}>{list}</Alert>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SuccessAlert(props) {\r\n  const classes = useStyles();\r\n  const { closeAlert } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert severity='success' onClose={() => closeAlert(false)}>\r\n        Formular er sendt\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nlet data = {\r\n  ansoeger_mail: \"\",\r\n  ansoeger_navn: \"\",\r\n  ansoeger_tlf: \"\",\r\n  ansoegn_indsendt: \"\",\r\n  ansvarl_kontaktmail: \"\",\r\n  ansvarl_kontaktpers: \"\",\r\n  ansvarl_kontaktlf: \"\",\r\n  overnat_adresse: \"\",\r\n  overnat_postnr: \"\",\r\n  overnat_by: \"\",\r\n  overnat_antal: \"\",\r\n  overnat_kommune: \"\",\r\n  overnat_lokaler: \"\",\r\n  overnat_navn: \"\",\r\n  overnat_over_150: false,\r\n  overnat_slut_dato: new Date(),\r\n  overnat_slut_tid: new Date(),\r\n  overnat_start_dato: new Date(),\r\n  overnat_start_tid: new Date(),\r\n  overnat_tegning: \"\",\r\n  overnat_tegning_filnavn: \"\",\r\n  the_geom: \"\",\r\n  x_coord: \"\",\r\n  y_coord: \"\",\r\n  overnat_kontaktpers: \"\",\r\n  overnat_kontakttlf: \"\",\r\n};\r\n\r\nconst FormularContext = React.createContext([{}, () => {}, () => {}, () => {}]);\r\n\r\nconst FormularProvider = (props) => {\r\n  const [state, setState] = useState(data);\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const setValue = (key, value) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const resetForm = () => setState(data);\r\n\r\n  const setValues = (keyValues) => {\r\n    Object.keys(keyValues).forEach((k) => {\r\n      setValue(k, keyValues[k]);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormularContext.Provider value={[state, setValue, setValues, resetForm]}>\r\n      {props.children}\r\n    </FormularContext.Provider>\r\n  );\r\n};\r\n\r\nexport { FormularContext, FormularProvider };\r\n","import React, { useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { FormularContext } from \"../context/FormContext\";\r\n\r\nexport default function TextInput(props) {\r\n  const { size, id, title, type, evtHandler } = props;\r\n  const [state, setValue, setValues] = useContext(FormularContext);\r\n  const handleChange = (e, id) => {\r\n    setValue(id, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={size}>\r\n      <TextField\r\n        id={id}\r\n        type={type || \"text\"}\r\n        value={state[id]}\r\n        InputLabelProps={{ shrink: true }}\r\n        label={\r\n          <Typography variant='h6' component='h3'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n        onChange={(e) => handleChange(e, id)}\r\n        fullWidth\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useContext, useRef } from \"react\";\r\nimport { Grid, Chip, Typography, IconButton } from \"@material-ui/core\";\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\nimport { FormularContext } from \"../context/FormContext\";\r\n\r\nconst _substr = (str) => {\r\n  if (str.length > 25) {\r\n    return \"...\" + str.substring(str.length - 22);\r\n  }\r\n  return str;\r\n};\r\n\r\nexport default function ImageUpload({ setImageSrc }) {\r\n  const fileRef = React.useRef(null);\r\n  const [state, setValue, setValues] = useContext(FormularContext);\r\n  const { overnat_tegning_filnavn } = state;\r\n  const deleteImage = () => {\r\n    setValues({\r\n      // imageSrc: \"\",\r\n      overnat_tegning_filnavn: \"\",\r\n    });\r\n    fileRef.current.value = \"\";\r\n    setImageSrc(\"\");\r\n  };\r\n\r\n  const reader = new FileReader();\r\n  const handleImageUpload = (e) => {\r\n    console.log(\"file upload: \", e.target.files[0].name);\r\n    let file = e.target.files[0];\r\n    let name = e.target.files[0].name;\r\n    // fileName = name;\r\n\r\n    setValue(\"overnat_tegning_filnavn\", e.target.files[0].name);\r\n\r\n    if (file) {\r\n      reader.onload = handleReaderLoaded;\r\n      // reader.readAsBinaryString(file);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleReaderLoaded = (e) => {\r\n    let binaryString = e.target.result;\r\n    console.log(\"before setImageSrc\");\r\n    setImageSrc(reader.result);\r\n    setValue(\"overnat_tegning\", reader.result.replace(/^data:.+;base64,/, \"\"));\r\n    // setData({\r\n    //   ...data,\r\n    //   overnat_tegning : btoa(binaryString)\r\n    // });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={5}>\r\n        <Typography\r\n          style={{ color: \"rgba(0, 0, 0, 0.54)\" }}\r\n          variant='subtitle1'\r\n          component='h3'\r\n        >\r\n          Vedhæft tegningsmateriale{\" \"}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <label htmlFor='upload-photo'>\r\n          <input\r\n            style={{ display: \"none\" }}\r\n            id='upload-photo'\r\n            name='upload-photo'\r\n            type='file'\r\n            accept='.jpeg,.jpg,.png'\r\n            onChange={handleImageUpload}\r\n            ref={fileRef}\r\n          />\r\n\r\n          <IconButton\r\n            color='primary'\r\n            aria-label='upload fil'\r\n            onClick={(e) => fileRef.current && fileRef.current.click()}\r\n          >\r\n            <PhotoCameraIcon />\r\n          </IconButton>\r\n        </label>\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        {overnat_tegning_filnavn && (\r\n          <Chip\r\n            variant='outlined'\r\n            label={_substr(overnat_tegning_filnavn)}\r\n            size='medium'\r\n            color='secondary'\r\n            onDelete={(x) => deleteImage()}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { FormularContext } from \"../context/FormContext\";\r\n\r\nfunction DateInput({ size, id, title, label }) {\r\n  const [state, setValue, setValues] = useContext(FormularContext);\r\n  const handleDateChange = (date) => {\r\n    if (date < new Date()) return;\r\n\r\n    switch (id) {\r\n      case \"overnat_start_dato\":\r\n        let startDate = new Date(date);\r\n        let slutDato = new Date(state.overnat_slut_dato);\r\n        let endDate = slutDato < startDate ? startDate : slutDato;\r\n        setValues({\r\n          overnat_start_dato: startDate,\r\n          overnat_slut_dato: endDate,\r\n          overnat_start_tid: startDate,\r\n          overnat_slut_tid: endDate,\r\n        });\r\n        break;\r\n      case \"overnat_slut_dato\":\r\n        if (new Date(date) < new Date(state.overnat_start_dato)) return;\r\n        setValue(\"overnat_slut_dato\", new Date(date));\r\n        setValue(\"overnat_slut_tid\", new Date(date));\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  return (\r\n    <Grid item xs={size}>\r\n      <KeyboardDatePicker\r\n        format='yyyy-MM-dd'\r\n        margin='normal'\r\n        id={id}\r\n        label={\r\n          <Typography variant='h6' component='h3'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n        value={state[id]}\r\n        onChange={handleDateChange}\r\n        KeyboardButtonProps={{\r\n          \"aria-label\": { label },\r\n        }}\r\n        cancelLabel='Annulere'\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nfunction TimeInput({ size, id, title, label }) {\r\n  const [state, setValue, setValues] = useContext(FormularContext);\r\n  const handleTimeChange = (time) => {\r\n    setValue(id, new Date(time));\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={size}>\r\n      <KeyboardTimePicker\r\n        margin='normal'\r\n        id={id}\r\n        label={\r\n          <Typography variant='h6' component='h3'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n        ampm={false}\r\n        value={state[id]}\r\n        onChange={handleTimeChange}\r\n        KeyboardButtonProps={{\r\n          \"aria-label\": \"ændre tidspunkt\",\r\n        }}\r\n      />\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default function DateTimeInputs() {\r\n  return (\r\n    <>\r\n      <DateInput id='overnat_start_dato' title='Start dato' size={6} />\r\n      <TimeInput id='overnat_start_tid' title='Start tidspunkt' size={6} />\r\n      <DateInput id='overnat_slut_dato' title='Slut dato' size={6} />\r\n      <TimeInput id='overnat_slut_tid' title='Slut tidspunkt' size={6} />\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Grid, TextField, Typography, MenuItem } from \"@material-ui/core\";\r\nimport { FormularContext } from \"../context/FormContext\";\r\n\r\nconst kommuner = [\r\n  {\r\n    value: \"Aarhus\",\r\n    nummer: 751,\r\n  },\r\n//   {\r\n//     value: \"Favrskov\",\r\n//     nummer: 710,\r\n//   },\r\n//   {\r\n//     value: \"Nordjurs\",\r\n//     nummer: 707,\r\n//   },\r\n  {\r\n    value: \"Odder\",\r\n    nummer: 727,\r\n  },\r\n  {\r\n    value: \"Samsø\",\r\n    nummer: 741,\r\n  },\r\n  {\r\n    value: \"Skanderborg\",\r\n    nummer: 746,\r\n  },\r\n//   {\r\n//     value: \"Syddjurs\",\r\n//     nummer: 706,\r\n//   },\r\n//   {\r\n//     value: \"Randers\",\r\n//     nummer: 730,\r\n//   },\r\n];\r\n\r\nexport default function SelectInput({\r\n  size,\r\n  id,\r\n  title,\r\n  setKomkode,\r\n  setAdresseTekst,\r\n}) {\r\n  const [state, setValue, setValues] = useContext(FormularContext);\r\n  const handleSelect = (e) => {\r\n    const [nr, val] = e.target.value.split(\"_\");\r\n    setValues({\r\n      overnat_kommune: e.target.value,\r\n      overnat_adresse: \"\",\r\n      the_geom: \"\",\r\n    });\r\n    setKomkode(nr);\r\n    setAdresseTekst(\"\");\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={size}>\r\n      <TextField\r\n        id={id}\r\n        select\r\n        value={state.overnat_kommune}\r\n        InputLabelProps={{ shrink: true }}\r\n        label={\r\n          <Typography variant='h6' component='h3'>\r\n            {title}\r\n          </Typography>\r\n        }\r\n        onChange={handleSelect}\r\n        fullWidth\r\n      >\r\n        {kommuner.map((option) => (\r\n          <MenuItem\r\n            key={option.nummer}\r\n            value={`${option.nummer}_${option.value}`}\r\n          >\r\n            {option.value}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\n\r\nexport default function SubmitButton({ onClick }) {\r\n  return (\r\n    <>\r\n      <Grid item xs={4}></Grid>\r\n      <Grid item xs={4}>\r\n        <Button variant='contained' color='primary' onClick={onClick}>\r\n          Send\r\n        </Button>\r\n      </Grid>\r\n      <Grid item xs={4}></Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Checkbox, Typography } from \"@material-ui/core\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport daLocale from \"date-fns/locale/da\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport * as yup from \"yup\";\r\nimport DawaSearcher from \"./DawaSearcher\";\r\nimport ErrorComp from \"./ErrorComp\";\r\nimport SuccessAlert from \"./SuccessAlert\";\r\nimport TextInput from \"./components/TextInput\";\r\nimport { FormularContext } from \"./context/FormContext\";\r\nimport ImageUpload from \"./components/ImageUpload\";\r\nimport DateTimeInputs from \"./components/DateInput\";\r\nimport SelectInput from \"./components/SelectInput\";\r\nimport SubmitButton from \"./components/SubmitButton\";\r\nimport { postData, postFormData } from \"./service\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    margin: 25,\r\n  },\r\n}));\r\n\r\nconst buildQuery = (data) => {\r\n  const keys = Object.keys(data);\r\n  const columns = keys.join(\",\");\r\n  const values = keys\r\n    .map((key) => {\r\n      if (\r\n        key === \"overnat_start_dato\" ||\r\n        key === \"overnat_slut_dato\" ||\r\n        key === \"overnat_start_tid\" ||\r\n        key === \"ansoegn_indsendt\" ||\r\n        key === \"overnat_slut_tid\"\r\n      ) {\r\n        return `'${formatedTimestamp(data[key])}'`;\r\n      }\r\n      if (key === \"the_geom\") return `${data[key]}`;\r\n\r\n      return `'${data[key]}'`;\r\n    })\r\n    .join(\",\");\r\n  return `INSERT INTO faelles.midlertidig_overnatning(${columns}) VALUES(${values})`;\r\n};\r\n\r\nconst formatedTimestamp = (d) => {\r\n  const date = new Date(d).toISOString().split(\"T\")[0];\r\n  const time = new Date(d).toTimeString().split(\" \")[0];\r\n  return `${date} ${time}`;\r\n};\r\n\r\nfunction Formular() {\r\n  const [state, setValue, setValues, resetForm] = useContext(FormularContext);\r\n  const fileRef = React.useRef(null);\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({\r\n    ansoeger_mail: \"\",\r\n    ansoeger_navn: \"\",\r\n    ansoeger_tlf: \"\",\r\n    ansoegn_indsendt: \"\",\r\n    ansvarl_kontaktmail: \"\",\r\n    ansvarl_kontaktpers: \"\",\r\n    ansvarl_kontaktlf: \"\",\r\n    overnat_adresse: \"\",\r\n    overnat_antal: \"\",\r\n    overnat_kommune: \"\",\r\n    overnat_lokaler: \"\",\r\n    overnat_navn: \"\",\r\n    overnat_over_150: false,\r\n    overnat_slut_dato: new Date().toISOString(),\r\n    overnat_slut_tid: new Date().toISOString(),\r\n    overnat_start_dato: new Date().toISOString(),\r\n    overnat_start_tid: new Date().toISOString(),\r\n    overnat_tegning: \"\",\r\n    overnat_tegning_filnavn: \"\",\r\n    the_geom: \"\",\r\n    gid: \"\",\r\n    file: \"\",\r\n  });\r\n\r\n  let schema = yup.object().shape({\r\n    overnat_kommune: yup.string().required(\"Vælg kommune, for at kunne vælge adresse\"),\r\n    overnat_adresse: yup.string().required(\"Overnatningstedets adresse er et krævet felt\"),\r\n    overnat_navn: yup.string().required(\"Overnatningstedets navn er et krævet felt\"),\r\n    overnat_lokaler: yup.string().required(\"Lokaler er et krævet felt\"),\r\n\tovernat_over_150: yup.string().required(),\r\n    overnat_antal: yup\r\n\t  .number(\"Maksimalt antal overnattende skal udfyldes med et tal\")\r\n\t  .typeError(\"Maksimalt antal overnattende skal udfyldes med et tal\")\r\n\t  .positive(\"Maksimalt antal overnattende skal udfyldes med et positivt tal.\")\r\n\t  .integer(\"Maksimalt antal overnattende skal udfyldes med et tal\"),\r\n    ansoeger_navn: yup\r\n      .string()\r\n      .required(\"Ansøger navn er et krævet felt\"),\r\n    ansoeger_tlf: yup\r\n      .string()\r\n      .matches(/^[0-9]{8}$/, \"Ansøger tlf. skal have 8 tal\"),\r\n\tansoeger_mail: yup\r\n      .string()\r\n\t  .email(\"Ansøger mail skal være en valid email adresse\")\r\n      .required(\"Ansøger mail er et krævet felt\"),\r\n\tansvarl_kontaktpers: yup\r\n      .string()\r\n      .required(\"Ansvarlig navn er et krævet felt\"),\r\n    ansvarl_kontaktlf: yup\r\n      .string()\r\n      .matches(/^[0-9]{8}$/, \"Ansvarlig tlf. skal have 8 tal\"),\r\n    ansvarl_kontaktmail: yup\r\n      .string()\r\n      .email(\"Ansvarlig mail skal være en valid email adresse\")\r\n      .required(\"Ansvarlig mail er et krævet felt\"),    \r\n    // overnat_tegning : yup.string().required(),\r\n    // overnat_tegning_filnavn : yup.string().required(),\r\n    overnat_slut_dato: yup.string().required(),\r\n    overnat_slut_tid: yup.string().required(),\r\n    overnat_start_dato: yup.string().required(),\r\n    overnat_start_tid: yup.string().required(),\r\n  });\r\n\r\n  const [komkode, setKomkode] = useState(\"751|741|727|746\");\r\n  const [imageSrc, setImageSrc] = useState(\"\");\r\n  const [formErrors, setFormErrors] = useState([]);\r\n  const [successMessage, setSuccessMessage] = useState(false);\r\n\r\n  // const handleInputChange = (e) => {};\r\n\r\n  // const { register, handleSubmit, watch, errors } = useForm();\r\n  // const onSubmit = (data) => console.log(data);\r\n  // const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n  // const deleteImage = () => {\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_tegning_filnavn: \"\",\r\n  //   });\r\n\r\n  //   setImageSrc(\"\");\r\n  // };\r\n\r\n  // const handleDateChange = (date) => {\r\n  //   setSelectedDate(date);\r\n  // };\r\n\r\n  // const handleStartDate = (date) => {\r\n  //   let startDate = new Date(date);\r\n  //   let slutDato = new Date(data.overnat_slut_dato);\r\n  //   let endDate = slutDato < startDate ? startDate : slutDato;\r\n  //   console.log(\"startDate :\", startDate, \" , endDate : \", endDate);\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_start_dato: startDate.toISOString(),\r\n  //     overnat_slut_dato: endDate.toISOString(),\r\n  //   });\r\n  // };\r\n\r\n  // const handleStartTime = (date) => {\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_start_tid: new Date(date).toISOString(),\r\n  //   });\r\n  // };\r\n\r\n  // const handleEndDate = (date) => {\r\n  //   let endDate = new Date(date);\r\n  //   let startDate = new Date(data.overnat_start_dato);\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_slut_dato: new Date(date).toISOString(),\r\n  //   });\r\n  // };\r\n\r\n  // const handleEndTime = (date) => {\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_slut_tid: new Date(date).toISOString(),\r\n  //   });\r\n  // };\r\n\r\n  // const handleSelect = (e) => {\r\n  //   const [nr, val] = e.target.value.split(\"_\");\r\n  //   console.log(\"kommune selected: \", e.target.value);\r\n  //   setData({\r\n  //     ...data,\r\n  //     overnat_kommune: e.target.value,\r\n  //     overnat_adresse: \"\",\r\n  //     the_geom: \"\",\r\n  //   });\r\n  //   setKomkode(nr);\r\n  //   setAdresseTekst(\"\");\r\n  // };\r\n\r\n  const setAdressData = (adress) => {\r\n    //console.log(`[${adress.adgangsadresse.x},${adress.adgangsadresse.x}]`);\r\n    // if (adress === \"\") {\r\n    //   setData({\r\n    //     ...data,\r\n    //     overnat_adresse: \"\",\r\n    //     the_geom: \"\",\r\n    //   });\r\n    // } else {\r\n    //   setData({\r\n    //     ...data,\r\n    //     overnat_adresse: adress.tekst,\r\n    //     the_geom: `[${adress.adgangsadresse.x},${adress.adgangsadresse.y}]`, // TODO: post geometry\r\n    //   });\r\n    // }\r\n    //ST_setsrid(ST_MakePoint(lat,long),4326) as geom\r\n    //the_geom: `[${adress.adgangsadresse.x},${adress.adgangsadresse.y}]`,\r\n\r\n    if (adress === \"\") {\r\n      setValues({\r\n        overnat_adresse: \"\",\r\n        overnat_postnr: \"\",\r\n        overnat_by: \"\",\r\n        the_geom: \"\",\r\n        x_coord: \"\",\r\n        y_coord: \"\",\r\n      });\r\n    } else {\r\n      let streetname = adress.tekst.split(\",\");\r\n      let adressname = streetname.length > 0 ? streetname[0] : adress.tekst;\r\n      setValues({\r\n        overnat_adresse: adressname,\r\n        overnat_postnr: adress.adgangsadresse.postnr,\r\n        overnat_by: adress.adgangsadresse.postnrnavn,\r\n        the_geom: `ST_setsrid(ST_MakePoint(${adress.adgangsadresse.x},${adress.adgangsadresse.y}),25832)`,\r\n        x_coord: adress.adgangsadresse.x,\r\n        y_coord: adress.adgangsadresse.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  // const handleFormData = (e) => {\r\n  //   console.log(e.target.id, \":\", e.target.value);\r\n  //   setData({\r\n  //     ...data,\r\n  //     [e.target.id]: e.target.value,\r\n  //   });\r\n  // };\r\n\r\n  const handleCheckBox = (e) => {\r\n    console.log(\"handleCheckbox => \", e.target.value);\r\n    setValue(\"overnat_over_150\", e.target.checked);\r\n  };\r\n\r\n  const [adresseTekst, setAdresseTekst] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    /*\r\n     * 1. collect all the data to send, including base64 string\r\n       2. create geom ST_setsrid(ST_MakePoint(lat,long),4326) as geom\r\n       3. build sql, axios.post\r\n       4. Success or Error => show feedback \r\n     */\r\n    // console.log(data);\r\n    const formData = {\r\n      ...state,\r\n      ansoegn_indsendt: new Date(),\r\n    };\r\n    console.log(\"ansøgning\", formData);\r\n    schema\r\n      .validate(formData, { abortEarly: false })\r\n      .then(function (valid) {\r\n        //alert(\"schame validity =>\" + valid);\r\n        const q = buildQuery(formData);\r\n        //postData(q)\r\n        postFormData(formData)\r\n          .then((res) => {\r\n            setSuccessMessage(true);\r\n            setFormErrors([]);\r\n            setAdresseTekst(\"\");\r\n            setKomkode(\"751|741|727|746\");\r\n            resetForm();\r\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n          })\r\n          .catch((err) => {\r\n            setFormErrors([\"Der var fejl ved indsending...\"]);\r\n            setSuccessMessage(false);\r\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n          });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err.errors);\r\n        setFormErrors(err.errors);\r\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={daLocale}>\r\n      <Container maxWidth='sm'>\r\n        <Typography variant='h6' gutterBottom>\r\n          Ansøg om midlertidig overnatning\r\n        </Typography>\r\n        {formErrors.length > 0 && (\r\n          <ErrorComp errors={formErrors} closeAlert={setFormErrors} />\r\n        )}\r\n\r\n        {successMessage && <SuccessAlert closeAlert={setSuccessMessage} />}\r\n\r\n        <Grid container spacing={3}>\r\n          <SelectInput\r\n            size={12}\r\n            id='overnat_kommune'\r\n            title='Hvilken kommune'\r\n            setKomkode={setKomkode}\r\n            setAdresseTekst={setAdresseTekst}\r\n          />\r\n          <DawaSearcher\r\n            size={12}\r\n            setAdressData={setAdressData}\r\n            komkode={komkode}\r\n            adresseTekst={adresseTekst}\r\n            setAdresseTekst={setAdresseTekst}\r\n          />\r\n          <TextInput\r\n            size={12}\r\n            id='overnat_navn'\r\n            title='Overnatningstedets navn'\r\n          />\r\n          <TextInput size={12} id='overnat_lokaler' title='Lokaler (navn på de lokaler overnatningen foregår i)' />\r\n          <Grid item xs={6}>\r\n            <Typography\r\n              style={{ color: \"rgba(0, 0, 0, 0.54)\" }}\r\n              variant='subtitle1'\r\n              component='h3'\r\n            >\r\n              Overnatter mere end 50 personer{\" \"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Checkbox\r\n              color='primary'\r\n              checked={state.overnat_over_150}\r\n              onChange={handleCheckBox}\r\n            />\r\n          </Grid>\r\n          {state.overnat_over_150 && <ImageUpload setImageSrc={setImageSrc} />}\r\n          <TextInput\r\n            size={12}\r\n            id='overnat_antal'\r\n            type='number'\r\n            title='Maksimalt antal overnattende'\r\n          />\r\n          <DateTimeInputs />\r\n          <TextInput size={12} id='ansoeger_navn' title='Ansøger navn' />\r\n          <TextInput\r\n            type='number'\r\n            size={6}\r\n            id='ansoeger_tlf'\r\n            title='Ansøger tlf.'\r\n          />\r\n          <TextInput size={6} id='ansoeger_mail' title='Ansøger mail' />\r\n          <Grid item xs={12}></Grid>\r\n          <TextInput\r\n            size={12}\r\n            id='ansvarl_kontaktpers'\r\n            title='Ansvarlig navn'\r\n          />\r\n          <TextInput\r\n            type='number'\r\n            size={6}\r\n            id='ansvarl_kontaktlf'\r\n            title='Ansvarlig tlf.'\r\n          />\r\n          <TextInput\r\n            size={6}\r\n            id='ansvarl_kontaktmail'\r\n            title='Ansvarlig mail'\r\n          />\r\n\r\n          <SubmitButton onClick={submitHandler} />\r\n        </Grid>\r\n      </Container>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\nexport default Formular;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://geocloud.beredskabskort.dk/api/v2/sql/geo\";\r\nconst url1 = \"http://localhost:8080/extensions/beredskab/controller/formular\";\r\nconst key = \"fbb2d411cfbc7b706c02359402afe195\";\r\nconst extUrl =\r\n  \"https://geocloud.beredskabskort.dk/extensions/beredskab/controller/formular\";\r\n\r\nexport const postData = (query) => {\r\n  const payload = { q: query, key: key, srs: \"25832\" };\r\n  return axios.post(url, payload);\r\n};\r\n\r\nexport const postFormData = (data) => {\r\n  data[\"overnat_over_150\"] = data[\"overnat_over_150\"].toString();\r\n  return axios.post(extUrl, data);\r\n};\r\n","import React from \"react\";\r\nimport Formular from \"./Formular\";\r\nimport { FormularProvider } from \"./context/FormContext\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <FormularProvider>\r\n        <Formular />\r\n      </FormularProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}